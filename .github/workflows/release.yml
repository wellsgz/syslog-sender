name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows: ["Auto Tag Version"]
    types:
      - completed

permissions:
  contents: write

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            filename: syslog-sender-linux-amd64
          - os: linux
            arch: arm64
            filename: syslog-sender-linux-arm64
          - os: darwin
            arch: amd64
            filename: syslog-sender-darwin-amd64
          - os: darwin
            arch: arm64
            filename: syslog-sender-darwin-arm64
          - os: windows
            arch: amd64
            filename: syslog-sender-windows-amd64.exe
          - os: freebsd
            arch: amd64
            filename: syslog-sender-freebsd-amd64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: false
          
    - name: Download dependencies
      run: go mod download
      
    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(grep -o 'AppVersion = "[^"]*"' main.go | cut -d'"' -f2)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "🏷️ Building version: $VERSION"
      
    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        echo "🔨 Building ${{ matrix.filename }} for ${{ matrix.os }}/${{ matrix.arch }}"
        go build -v -ldflags="-s -w -X main.AppVersion=${{ steps.version.outputs.VERSION }}" -o ${{ matrix.filename }} .
        
        # Verify binary was created
        if [ ! -f "${{ matrix.filename }}" ]; then
          echo "❌ Failed to create binary: ${{ matrix.filename }}"
          exit 1
        fi
        
        # Show binary info
        ls -lh "${{ matrix.filename }}"
        echo "✅ Successfully built ${{ matrix.filename }}"
        
    - name: Generate checksum
      run: |
        echo "🔐 Generating SHA256 checksum for ${{ matrix.filename }}"
        sha256sum ${{ matrix.filename }} > ${{ matrix.filename }}.sha256
        
        # Verify checksum file was created
        if [ ! -f "${{ matrix.filename }}.sha256" ]; then
          echo "❌ Failed to create checksum file"
          exit 1
        fi
        
        echo "✅ Checksum generated:"
        cat "${{ matrix.filename }}.sha256"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binary-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          ${{ matrix.filename }}
          ${{ matrix.filename }}.sha256
        retention-days: 7

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          VERSION=$(grep -o 'AppVersion = "[^"]*"' main.go | cut -d'"' -f2)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "🏷️ Creating release for version: $VERSION"
        
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./release-files
        merge-multiple: true
        
    - name: Validate artifacts
      run: |
        echo "🔍 Validating release artifacts..."
        cd ./release-files
        
        # Define expected files
        expected_binaries=(
          "syslog-sender-linux-amd64"
          "syslog-sender-linux-arm64"
          "syslog-sender-darwin-amd64"
          "syslog-sender-darwin-arm64"
          "syslog-sender-windows-amd64.exe"
          "syslog-sender-freebsd-amd64"
        )
        
        # Check all expected binaries exist
        missing_files=()
        for binary in "${expected_binaries[@]}"; do
          if [ ! -f "$binary" ]; then
            missing_files+=("$binary")
          else
            echo "✅ Found binary: $binary ($(ls -lh "$binary" | awk '{print $5}'))"
          fi
          
          # Check corresponding SHA256 file
          if [ ! -f "$binary.sha256" ]; then
            missing_files+=("$binary.sha256")
          else
            echo "✅ Found checksum: $binary.sha256"
          fi
        done
        
        # Fail if any files are missing
        if [ ${#missing_files[@]} -gt 0 ]; then
          echo "❌ Missing required files:"
          printf '%s\n' "${missing_files[@]}"
          exit 1
        fi
        
        # Verify checksums
        echo "🔐 Verifying checksums..."
        for binary in "${expected_binaries[@]}"; do
          if sha256sum -c "$binary.sha256"; then
            echo "✅ Checksum verified: $binary"
          else
            echo "❌ Checksum failed: $binary"
            exit 1
          fi
        done
        
        echo "✅ All artifacts validated successfully"
        echo "📦 Total files: $(ls -1 | wc -l)"
        
    - name: Generate release notes
      run: |
        echo "📝 Generating release notes..."
        cat > release_notes.md << 'EOF'
        ## Syslog Sender v${{ steps.version.outputs.VERSION }}
        
        Cross-platform syslog message sender with comprehensive features:
        
        ### Features
        - **UDP and TCP transport support**
        - **RFC 3164 compliant message formatting**
        - **Configurable hostname and program fields**
        - **Automatic space handling for RFC compliance**
        - **Comprehensive error handling and validation**
        - **Debug mode support**
        
        ### Download
        Choose the binary for your platform:
        
        | Platform | Architecture | Binary |
        |----------|-------------|---------|
        | Linux | x86_64 | `syslog-sender-linux-amd64` |
        | Linux | ARM64 | `syslog-sender-linux-arm64` |
        | macOS | Intel | `syslog-sender-darwin-amd64` |
        | macOS | Apple Silicon | `syslog-sender-darwin-arm64` |
        | Windows | x86_64 | `syslog-sender-windows-amd64.exe` |
        | FreeBSD | x86_64 | `syslog-sender-freebsd-amd64` |
        
        ### Quick Start
        ```bash
        # Download and make executable (Unix systems)
        chmod +x syslog-sender-linux-amd64
        
        # Send a test message
        ./syslog-sender-linux-amd64 -address your-syslog-server -message "Test message"
        ```
        
        ### Verification
        All binaries include SHA256 checksums for integrity verification:
        ```bash
        sha256sum -c syslog-sender-linux-amd64.sha256
        ```
        
        ### Support
        - 📖 [Documentation](https://github.com/wellsgz/syslog-sender#readme)
        - 🐛 [Report Issues](https://github.com/wellsgz/syslog-sender/issues)
        - 💡 [Feature Requests](https://github.com/wellsgz/syslog-sender/issues)
        EOF
        
        echo "✅ Release notes generated"
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.version.outputs.VERSION }}"
        name: "Syslog Sender v${{ steps.version.outputs.VERSION }}"
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          ./release-files/syslog-sender-linux-amd64
          ./release-files/syslog-sender-linux-amd64.sha256
          ./release-files/syslog-sender-linux-arm64
          ./release-files/syslog-sender-linux-arm64.sha256
          ./release-files/syslog-sender-darwin-amd64
          ./release-files/syslog-sender-darwin-amd64.sha256
          ./release-files/syslog-sender-darwin-arm64
          ./release-files/syslog-sender-darwin-arm64.sha256
          ./release-files/syslog-sender-windows-amd64.exe
          ./release-files/syslog-sender-windows-amd64.exe.sha256
          ./release-files/syslog-sender-freebsd-amd64
          ./release-files/syslog-sender-freebsd-amd64.sha256
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Release summary
      run: |
        echo "🎉 Release v${{ steps.version.outputs.VERSION }} created successfully!"
        echo "📦 Binaries available for: Linux (amd64/arm64), macOS (amd64/arm64), Windows (amd64), FreeBSD (amd64)"
        echo "🔗 Release URL: https://github.com/wellsgz/syslog-sender/releases/tag/v${{ steps.version.outputs.VERSION }}"
        echo "✅ All artifacts uploaded with SHA256 checksums" 