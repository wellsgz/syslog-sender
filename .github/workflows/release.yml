name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_run:
    workflows: ["Auto Tag Version"]
    types:
      - completed

permissions:
  contents: write

jobs:
  build:
    name: Build Release Binaries
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            filename: syslog-sender-linux-amd64
          - os: linux
            arch: arm64
            filename: syslog-sender-linux-arm64
          - os: darwin
            arch: amd64
            filename: syslog-sender-darwin-amd64
          - os: darwin
            arch: arm64
            filename: syslog-sender-darwin-arm64
          - os: windows
            arch: amd64
            filename: syslog-sender-windows-amd64.exe
          - os: freebsd
            arch: amd64
            filename: syslog-sender-freebsd-amd64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: false
          
    - name: Download dependencies
      run: go mod download
      
    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          # Extract from tag when triggered by tag push
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # Extract from main.go when triggered by workflow_run
          VERSION=$(grep -o 'AppVersion = "[^"]*"' main.go | cut -d'"' -f2)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
      
    - name: Build binary
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
        CGO_ENABLED: 0
      run: |
        go build -v -ldflags="-s -w -X main.AppVersion=${{ steps.version.outputs.VERSION }}" -o ${{ matrix.filename }} .
        
    - name: Generate checksums
      run: |
        sha256sum ${{ matrix.filename }} > ${{ matrix.filename }}.sha256
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: |
          ${{ matrix.filename }}
          ${{ matrix.filename }}.sha256
        retention-days: 7

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
        
    - name: Flatten artifacts directory
      run: |
        # Move all files from subdirectories to the root artifacts directory
        find ./artifacts -name "syslog-sender-*" -o -name "*.sha256" | while read file; do
          mv "$file" ./artifacts/
        done
        # Remove empty subdirectories
        find ./artifacts -mindepth 1 -type d -empty -delete
        # List final artifacts
        echo "📦 Final artifacts:"
        ls -la ./artifacts/
        
    - name: Extract version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "push" ]; then
          # Extract from tag when triggered by tag push
          VERSION=${GITHUB_REF#refs/tags/v}
        else
          # Extract from main.go when triggered by workflow_run
          VERSION=$(grep -o 'AppVersion = "[^"]*"' main.go | cut -d'"' -f2)
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
      
    - name: Generate release notes
      id: release_notes
      run: |
        echo "## Release Notes" > release_notes.md
        echo "" >> release_notes.md
        echo "### Syslog Sender v${{ steps.version.outputs.VERSION }}" >> release_notes.md
        echo "" >> release_notes.md
        echo "Cross-platform syslog message sender with the following features:" >> release_notes.md
        echo "" >> release_notes.md
        echo "- **UDP and TCP transport support**" >> release_notes.md
        echo "- **RFC 3164 compliant message formatting**" >> release_notes.md
        echo "- **Configurable hostname and program fields**" >> release_notes.md
        echo "- **Automatic space handling for RFC compliance**" >> release_notes.md
        echo "- **Comprehensive error handling and validation**" >> release_notes.md
        echo "- **Debug mode support**" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Installation" >> release_notes.md
        echo "" >> release_notes.md
        echo "Download the appropriate binary for your platform:" >> release_notes.md
        echo "" >> release_notes.md
        echo "- **Linux x86_64**: \`syslog-sender-linux-amd64\`" >> release_notes.md
        echo "- **Linux ARM64**: \`syslog-sender-linux-arm64\`" >> release_notes.md
        echo "- **macOS Intel**: \`syslog-sender-darwin-amd64\`" >> release_notes.md
        echo "- **macOS Apple Silicon**: \`syslog-sender-darwin-arm64\`" >> release_notes.md
        echo "- **Windows x86_64**: \`syslog-sender-windows-amd64.exe\`" >> release_notes.md
        echo "- **FreeBSD x86_64**: \`syslog-sender-freebsd-amd64\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Quick Start" >> release_notes.md
        echo "" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "# Download the binary for your platform" >> release_notes.md
        echo "# Make it executable (Unix systems)" >> release_notes.md
        echo "chmod +x syslog-sender-linux-amd64" >> release_notes.md
        echo "" >> release_notes.md
        echo "# Send a test message" >> release_notes.md
        echo "./syslog-sender-linux-amd64 -address your-syslog-server -message \"Test message\"" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Verification" >> release_notes.md
        echo "" >> release_notes.md
        echo "All binaries include SHA256 checksums for integrity verification:" >> release_notes.md
        echo "" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "sha256sum -c syslog-sender-linux-amd64.sha256" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Changes in this Release" >> release_notes.md
        echo "" >> release_notes.md
        
        # Extract changelog from README for this version
        if grep -q "### Version ${{ steps.version.outputs.VERSION }}" README.md; then
          echo "See the [full changelog](https://github.com/wellsgz/syslog-sender#changelog) for detailed changes." >> release_notes.md
        else
          echo "This is a maintenance release with improvements and bug fixes." >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "### Support" >> release_notes.md
        echo "" >> release_notes.md
        echo "- 📖 [Documentation](https://github.com/wellsgz/syslog-sender#readme)" >> release_notes.md
        echo "- 🐛 [Report Issues](https://github.com/wellsgz/syslog-sender/issues)" >> release_notes.md
        echo "- 💡 [Feature Requests](https://github.com/wellsgz/syslog-sender/issues)" >> release_notes.md
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.version.outputs.VERSION }}"
        name: "Syslog Sender v${{ steps.version.outputs.VERSION }}"
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          ./artifacts/syslog-sender-*
          ./artifacts/*.sha256
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update latest release
      run: |
        echo "✅ Release v${{ steps.version.outputs.VERSION }} created successfully"
        echo "📦 Binaries available for: Linux, macOS, Windows, FreeBSD"
        echo "🔗 Release URL: https://github.com/wellsgz/syslog-sender/releases/tag/v${{ steps.version.outputs.VERSION }}" 