name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run go fmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted. Please run 'go fmt ./...'"
            gofmt -s -l .
            exit 1
          fi

      - name: Run go vet
        run: go vet ./...

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

      - name: Build application
        run: go build -v -o syslog-sender .

      - name: Test binary functionality
        run: |
          ./syslog-sender -version
          ./syslog-sender -help

      - name: Run integration tests
        run: |
          chmod +x test_examples.sh
          # Run a subset of tests that don't require network
          timeout 30 ./test_examples.sh || true

  build:
    name: Build Cross-Platform
    runs-on: ubuntu-latest
    needs: test

    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            filename: syslog-sender-linux-amd64
          - os: linux
            arch: arm64
            filename: syslog-sender-linux-arm64
          - os: darwin
            arch: amd64
            filename: syslog-sender-darwin-amd64
          - os: darwin
            arch: arm64
            filename: syslog-sender-darwin-arm64
          - os: windows
            arch: amd64
            filename: syslog-sender-windows-amd64.exe
          - os: freebsd
            arch: amd64
            filename: syslog-sender-freebsd-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          go build -v -ldflags="-s -w -X main.AppVersion=${{ github.ref_name }}" -o ${{ matrix.filename }} .

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: syslog-sender-${{ matrix.os }}-${{ matrix.arch }}
          path: ${{ matrix.filename }}
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Run Gosec Security Scanner
        uses: securecodewarrior/github-action-gosec@master
        with:
          args: "-no-fail -fmt sarif -out results.sarif ./..."

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif
